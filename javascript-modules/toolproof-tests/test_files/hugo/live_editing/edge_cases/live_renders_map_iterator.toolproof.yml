name: Hugo Bookshop live renders a map iterator

platforms:
  - linux
  - mac

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "component-lib/components/page/page.hugo.html" file with the content {html}
    html: |-
      {{ range . }}
      {{ $dot := . }}
      <div>
        {{ partial "bookshop" . }}
        {{ range $key, $value := $dot }}
          <span>{{ $key }}: {{ . }}</span>
        {{ end }}
      </div>
      {{ end }}
  - step: I have a "component-lib/components/text/text.hugo.html" file with the content {html}
    html: |-
      <p>{{ markdownify .text }}</p>
  - step: I have a "site/content/_index.md" file with the content {md}
    md: |-
      ---
      components:
        - _bookshop_name: text
          text: Hello
      ---
  - step: I have a "site/layouts/index.html" file with the content {html}
    html: |-
      <html>
      <body>
      {{ partial "bookshop_bindings" `.Params.components` }}
      {{ partial "bookshop" (slice "page" .Params.components) }}
      </body>
      </html>
  - macro: I build my Hugo site and load it with front matter {json}
    json: |-
      { "components": [{ "_bookshop_name": "text", "text": "Hello" }] }
  - macro: CloudCannon pushes the front matter {json}
    json: |-
      { "components": [{ "_bookshop_name": "text", "text": "Hello" }, { "_bookshop_name": "text", "text": "Hooray" }] }
  - step: In my browser, I evaluate {js}
    js: await toolproof.waitFor(() => window.bookshopLive?.renderCount === 2, 8000)
  - step: In my browser, the console should be empty
  - step: "In my browser, the result of {js} should contain '_bookshop_name: text'"
    js: return (await toolproof.querySelector("div:nth-of-type(1)>span:nth-of-type(1)")).innerText
  - step: "In my browser, the result of {js} should contain 'text: Hello'"
    js: return (await toolproof.querySelector("div:nth-of-type(1)>span:nth-of-type(2)")).innerText
  - step: "In my browser, the result of {js} should contain '_bookshop_name: text'"
    js: return (await toolproof.querySelector("div:nth-of-type(2)>span:nth-of-type(1)")).innerText
  - step: "In my browser, the result of {js} should contain 'text: Hooray'"
    js: return (await toolproof.querySelector("div:nth-of-type(2)>span:nth-of-type(2)")).innerText
