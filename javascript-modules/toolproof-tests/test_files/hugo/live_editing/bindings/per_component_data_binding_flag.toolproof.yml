name: Hugo bookshop live respects the per-component dataBinding flag

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "site/content/_index.md" file with the content {md}
    md: |-
      ---
      hero: "Hello World"
      ---
  - step: I have a "site/layouts/index.html" file with the content {html}
    html: |-
      <html>
      <body>
      {{ partial "bookshop_bindings" `(dict "innards" .Params.hero "dataBinding" false)` }}
      {{ partial "bookshop" (slice "title" (dict "innards" .Params.hero "dataBinding" false)) }}
      {{ partial "bookshop_bindings" `(dict "innards" .Params.hero "_dataBinding" false)` }}
      {{ partial "bookshop" (slice "title" (dict "innards" .Params.hero "_dataBinding" false)) }}
      {{ partial "bookshop_bindings" `(dict "innards" .Params.hero "data_binding" false)` }}
      {{ partial "bookshop" (slice "title" (dict "innards" .Params.hero "data_binding" false)) }}
      {{ partial "bookshop_bindings" `(dict "innards" .Params.hero "_data_binding" false)` }}
      {{ partial "bookshop" (slice "title" (dict "innards" .Params.hero "_data_binding" false)) }}
      {{ partial "bookshop_bindings" `(dict "innards" .Params.hero "editorLink" false)` }}
      {{ partial "bookshop" (slice "title" (dict "innards" .Params.hero "editorLink" false)) }}
      {{ partial "bookshop_bindings" `(dict "innards" .Params.hero "_editorLink" false)` }}
      {{ partial "bookshop" (slice "title" (dict "innards" .Params.hero "_editorLink" false)) }}
      {{ partial "bookshop_bindings" `(dict "innards" .Params.hero "editor_link" false)` }}
      {{ partial "bookshop" (slice "title" (dict "innards" .Params.hero "editor_link" false)) }}
      {{ partial "bookshop_bindings" `(dict "innards" .Params.hero "_editor_link" false)` }}
      {{ partial "bookshop" (slice "title" (dict "innards" .Params.hero "_editor_link" false)) }}
      </body>
      </html>
  - macro: I build my Hugo site and load it with front matter {json}
    json: |-
      { "hero": "Hello World" }
  - step: In my browser, the console should be empty
  - step: In my browser, the result of {js} should be exactly '<h1>Hello World</h1>'
    js: return (await toolproof.querySelector("h1:nth-of-type(1)")).outerHTML
  - step: In my browser, the result of {js} should be exactly '<h1>Hello World</h1>'
    js: return (await toolproof.querySelector("h1:nth-of-type(2)")).outerHTML
  - step: In my browser, the result of {js} should be exactly '<h1>Hello World</h1>'
    js: return (await toolproof.querySelector("h1:nth-of-type(3)")).outerHTML
  - step: In my browser, the result of {js} should be exactly '<h1>Hello World</h1>'
    js: return (await toolproof.querySelector("h1:nth-of-type(4)")).outerHTML
  - step: In my browser, the result of {js} should be exactly '<h1>Hello World</h1>'
    js: return (await toolproof.querySelector("h1:nth-of-type(5)")).outerHTML
  - step: In my browser, the result of {js} should be exactly '<h1>Hello World</h1>'
    js: return (await toolproof.querySelector("h1:nth-of-type(6)")).outerHTML
  - step: In my browser, the result of {js} should be exactly '<h1>Hello World</h1>'
    js: return (await toolproof.querySelector("h1:nth-of-type(7)")).outerHTML
  - step: In my browser, the result of {js} should be exactly '<h1>Hello World</h1>'
    js: return (await toolproof.querySelector("h1:nth-of-type(8)")).outerHTML