name: Hugo bookshop live renders components depth first

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "site/content/_index.md" file with the content {md}
    md: |-
      ---
      data:
        one:
          items:
            - title: "I"
            - title: "II"
            - title: "III"
        two: "two"
        three: "three"
      ---
  - step: I have a "site/layouts/index.html" file with the content {html}
    html: |-
      <html>
      <body>
      {{ partial "bookshop_bindings" ".Params.data" }}
      {{ partial "bookshop" (slice "uppermost" .Params.data) }}
      </body>
      </html>
  - macro: I build my Hugo site and load it with front matter {json}
    json: |-
      { "data": { "one": { "items": [{ "title": "I" }, { "title": "II" }, { "title": "III" }] }, "two": "two", "three": "three" } }
  - step: In my browser, the console should be empty
  - step: In my browser, I evaluate {js}
    js: |-
      const spanElement = await toolproof.querySelector("span");
      window.originalSpanElement = spanElement;
  - macro: CloudCannon pushes the front matter {json}
    json: |-
      { "data": { "one": { "items": [{ "title": "I" }, { "title": "II" }, { "title": "III" }, { "title": "IV" }] }, "two": "two", "three": "tres" } }
  - step: In my browser, the console should be empty
  - step: In my browser, the result of {js} should be exactly "IV"
    js: return (await toolproof.querySelector("h1:nth-of-type(4)")).innerText
  - step: In my browser, I evaluate {js}
    js: |-
      // Check if the span element is still the same DOM node
      // (i.e., it wasn't rerendered, only the component with the updated array was)
      const currentSpanElement = await toolproof.querySelector("span");
      toolproof.assert(currentSpanElement === window.originalSpanElement);
