name: Hugo bookshop selectively live renders a loop

platforms:
  - linux
  - mac

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "site/content/_index.md" file with the content {md}
    md: |-
      ---
      items:
        - title: "One"
        - title: "Two"
        - title: "Three"
      ---
  - step: I have a "site/layouts/index.html" file with the content {html}
    html: |-
      <html>
      <body>
      {{ partial "bookshop_bindings" `(dict "items" .Params.items)` }}
      {{ partial "bookshop" (slice "multiple" (dict "items" .Params.items)) }}
      </body>
      </html>
  - macro: I build my Hugo site and load it with front matter {json}
    json: |-
      { "items": [{ "title": "One" }, { "title": "Two" }, { "title": "Three" }] }
  - step: In my browser, I evaluate {js}
    js: |-
      const secondHeader = await toolproof.querySelector("h1:nth-of-type(2)");
      window.originalSecondHeader = secondHeader;
  - macro: CloudCannon pushes the front matter {json}
    json: |-
      { "items": [{ "title": "A" }, { "title": "Two" }, { "title": "C" }] }
  - step: In my browser, the console should be empty
  - step: In my browser, the result of {js} should be exactly "A"
    js: return (await toolproof.querySelector("h1:nth-of-type(1)")).innerText
  - step: In my browser, the result of {js} should be exactly "C"
    js: return (await toolproof.querySelector("h1:nth-of-type(3)")).innerText
  - step: In my browser, I evaluate {js}
    js: |-
      // Check if the second h1 element is still the same DOM node
      // (i.e., it wasn't rerendered, only the 1st and 3rd were)
      const currentSecondHeader = await toolproof.querySelector("h1:nth-of-type(2)");
      toolproof.assert(currentSecondHeader === window.originalSecondHeader);
