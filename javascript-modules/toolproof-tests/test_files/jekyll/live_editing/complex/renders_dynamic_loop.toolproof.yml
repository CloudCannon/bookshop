name: Jekyll bookshop live renders a dynamic loop

platforms:
  - linux
  - mac

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "component-lib/components/page/page.jekyll.html" file with the content {html}
    html: |-
      <div class="page">
      {% for component in include.content_blocks %}
        {% bookshop {{component._bookshop_name}} bind=component %}
      {% endfor %}
      </div>
  - step: I have a "site/index.html" file with the content {html}
    html: |-
      ---
      layout: default
      components:
        - _bookshop_name: single
          title: Block One
        - _bookshop_name: tag
          inner:
            text: Block Two
        - _bookshop_name: single
          title: Block Three
      ---
      {% bookshop page content_blocks=page.components %}
  - macro: I build my Jekyll site and load it with front matter {json}
    json: |-
      {
        "layout": "default",
        "components": [
          {
            "_bookshop_name": "single",
            "title": "Block One"
          },
          {
            "_bookshop_name": "tag",
            "inner": {
              "text": "Block Two"
            }
          },
          {
            "_bookshop_name": "single",
            "title": "Block Three"
          }
        ]
      }
  - macro: CloudCannon pushes the front matter {json}
    json: |-
      {
        "layout": "default",
        "components": [
          {
            "_bookshop_name": "single",
            "title": "Block One"
          },
          {
            "_bookshop_name": "tag",
            "inner": {
              "text": "New Tag"
            }
          },
          {
            "_bookshop_name": "single",
            "title": "Block Three"
          }
        ]
      }
  - step: In my browser, the console should be empty
  - step: In my browser, the result of {js} should contain "New Tag"
    js: return (await toolproof.querySelector("span")).textContent
  - step: In my browser, the result of {js} should contain "Block Three"
    js: return (await toolproof.querySelector(".page>*:nth-child(3)")).textContent
