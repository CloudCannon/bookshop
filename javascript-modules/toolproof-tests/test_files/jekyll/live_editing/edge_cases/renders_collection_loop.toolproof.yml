name: Jekyll bookshop live renders collection loop

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "site/_config.yml" file with the content {yaml}
    yaml: |-
      bookshop_locations:
        - ../component-lib

      include:
        - _cloudcannon

      plugins:
        - jekyll-bookshop

      collections:
        collection1:
          name: C1
        collection2:
          name: C2
  - step: I have a "component-lib/components/test/test.jekyll.html" file with the content {html}
    html: |-
      {% for item in include.page_links %}
        {% assign collections = site.collection1 
          | concat: site.collection2 %}
        {% assign linked_page = false %}
        {% for doc in collections %}
          {% if doc.url == item.link %}
            {% assign linked_page = doc %}
            {% break %}
          {% endif %}
        {% endfor %}

        <p>{{ linked_page }}</p>
        <h1>{{linked_page.page_image_path}}</h1>
      {% endfor %}
  - step: I have a "site/_collection1/banana.html" file with the content {html}
    html: |-
      ---
      permalink: /banana
      page_image_path: BANANA PATH
      ---
      <h1>Hello!</h1>
  - step: I have a "site/_collection2/apple.html" file with the content {html}
    html: |-
      ---
      permalink: /apple
      page_image_path: APPLE PATH
      ---
      <h1>Hello!</h1>
  - step: I have a "site/index.html" file with the content {html}
    html: |-
      ---
      layout: default
      page_links:
        - link: /banana
      ---
      {% bookshop test page_links=page.page_links %}
  - macro: I build my Jekyll site and load it with front matter {json}
    json: |-
      {
        "layout": "default",
        "page_links": [
          {
            "link": "/banana"
          }
        ]
      }
  - macro: CloudCannon pushes the front matter {json}
    json: |-
      {
        "layout": "default",
        "page_links": [
          {
            "link": "/banana"
          },
          {
            "link": "/apple"
          }
        ]
      }
  - step: In my browser, the console should be empty
  - step: In my browser, the result of {js} should contain "BANANA PATH"
    js: return (await toolproof.querySelector("h1:nth-of-type(1)")).textContent
  - step: In my browser, the result of {js} should contain "APPLE PATH"
    js: return (await toolproof.querySelector("h1:nth-of-type(2)")).textContent 