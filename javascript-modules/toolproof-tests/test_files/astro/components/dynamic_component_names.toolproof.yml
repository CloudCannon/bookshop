name: Astro dynamic component names test

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "site/src/components/a.jsx" file with the content {jsx}
    jsx: |-
      export default function A({ text }) {
        return (
          <h1>🅰️{text}</h1>
        )
      }
  - step: I have a "site/src/components/b.jsx" file with the content {jsx}
    jsx: |-
      export default function B({ text }) {
        return (
          <h1>🅱️{text}</h1>
        )
      }
  - step: I have a "site/src/pages/index.md" file with the content {md}
    md: |-
      ---
      layout: ../layouts/Page.astro
      components:
        - name: a
          text: 🫀
        - name: b
          text: 🫑
      ---
  - step: I have a "site/src/layouts/Page.astro" file with the content {astro}
    astro: |-
      ---
      const components = import.meta.glob("../components/**/*.jsx", {
        eager: true,
      });
      const { frontmatter } = Astro.props;
      ---
      {frontmatter.components.map(({name, text}) => {
        const Component = components[`../components/${name}.jsx`].default
        return <Component bookshop:live text={text} />
      })}
  - step: I run "cd site && npm run build"
  - step: stderr should be empty
  - step: stdout should contain "Complete!"
  - step: The file "site/dist/index.html" should contain "🅰️<!-- -->🫀"
  - step: The file "site/dist/index.html" should contain "🅱️<!-- -->🫑"
  - step: The file "site/dist/index.html" should contain "bookshop-live name(a)"
  - step: The file "site/dist/index.html" should contain "bookshop-live name(b)" 