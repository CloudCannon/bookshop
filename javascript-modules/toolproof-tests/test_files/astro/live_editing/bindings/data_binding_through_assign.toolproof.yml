name: Astro bookshop live renders a data binding through an assign

platforms:
  - linux
  - mac

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "site/src/components/outer.astro" file with the content {astro}
    astro: |-
      ---
      import Title from './title.astro';
      const a = Astro;
      const p = a.props;
      const t = p.title;
      const v = t.item
      ---
      <div> <Title innards={v} /></div>
  - step: I have a "site/src/components/outer_react.jsx" file with the content {jsx}
    jsx: |-
      import Title from './title_react.jsx';

      export default (props) => {
        const p = props;
        const t = p.title;
        const v = t.item
        return <div> <Title innards={v} /></div>;
      }
  - step: I have a "site/src/layouts/Page.astro" file with the content {astro}
    astro: |-
      ---
      import Outer from "../components/outer.astro";
      import OuterReact from "../components/outer_react.jsx";
      const { frontmatter } = Astro.props;
      ---

      <html lang="en"> <body>
      <Outer bookshop:live title={frontmatter.items} />
      <OuterReact bookshop:live title={frontmatter.items} />
      </body> </html>
  - step: I have a "site/src/pages/index.md" file with the content {md}
    md: |-
      ---
      layout: ../layouts/Page.astro
      items:
        item: "Hello There"
      ---
  - macro: I build my Astro site and load it with front matter {json}
    json: |-
      {
        "layout": "../layouts/Page.astro",
        "items": {
          "item": "Hello There"
        }
      }
  - step: In my browser, the console should be empty
  - step: In my browser, the result of {js} should be exactly '<h1 data-cms-bind="#items.item">Hello There</h1>'
    js: return (await toolproof.querySelector("div:nth-of-type(1)>h1")).outerHTML
  - step: In my browser, the result of {js} should be exactly '<h1 data-cms-bind="#items.item">Hello There</h1>'
    js: return (await toolproof.querySelector("div:nth-of-type(2)>h1")).outerHTML
