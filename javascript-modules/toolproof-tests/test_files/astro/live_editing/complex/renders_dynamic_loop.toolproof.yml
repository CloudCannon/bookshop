name: Astro bookshop live renders a dynamic loop

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "site/src/components/page/page.astro" file with the content {astro}
    astro: |-
      ---
      const { content_blocks } = Astro.props;
      const components = import.meta.glob('../**/*.*', { eager: true });
      ---
      <div class="page">
      { content_blocks.map((block) => {
        const Component = components[`../${block._bookshop_name}/${block._bookshop_name}.astro`].default;
        const ReactComponent = components[`../${block._bookshop_name}/${block._bookshop_name}_react.jsx`].default;
        return <><Component {...block}/><ReactComponent {...block}/></>;
      })}
      </div>
  - step: I have a "site/src/layouts/Page.astro" file with the content {astro}
    astro: |-
      ---
      import Page from "../components/page/page.astro";
      const { frontmatter } = Astro.props;
      ---
      <html lang="en"> <body>
      <Page bookshop:live content_blocks={frontmatter.components} />
      </body> </html>
  - step: I have a "site/src/pages/index.md" file with the content {md}
    md: |-
      ---
      layout: ../layouts/Page.astro
      components:
        - _bookshop_name: single
          title: Block One
        - _bookshop_name: tag
          inner:
            text: Block Two
        - _bookshop_name: single
          title: Block Three
      ---
  - macro: I build my Astro site and load it with front matter {json}
    json: |-
      {
        "layout": "../layouts/Page.astro",
        "components": [
          {
            "_bookshop_name": "single",
            "title": "Block One"
          },
          {
            "_bookshop_name": "tag",
            "inner": {
              "text": "Block Two"
            }
          },
          {
            "_bookshop_name": "single",
            "title": "Block Three"
          }
        ]
      }
  - macro: CloudCannon pushes the front matter {json}
    json: |-
      {
        "layout": "../layouts/Page.astro",
        "components": [
          {
            "_bookshop_name": "single",
            "title": "Block One"
          },
          {
            "_bookshop_name": "tag",
            "inner": {
              "text": "New Tag"
            }
          },
          {
            "_bookshop_name": "single",
            "title": "Block Three"
          }
        ]
      }
  - step: In my browser, the console should be empty
  - step: In my browser, the result of {js} should contain "New Tag"
    js: return (await toolproof.querySelector(".page>*:nth-child(3)")).textContent
  - step: In my browser, the result of {js} should contain "New Tag"
    js: return (await toolproof.querySelector(".page>*:nth-child(4)")).textContent
  - step: In my browser, the result of {js} should contain "Block Three"
    js: return (await toolproof.querySelector(".page>*:nth-child(5)")).textContent
  - step: In my browser, the result of {js} should contain "Block Three"
    js: return (await toolproof.querySelector(".page>*:nth-child(6)")).textContent 