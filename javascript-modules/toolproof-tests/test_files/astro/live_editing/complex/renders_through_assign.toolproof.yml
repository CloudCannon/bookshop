name: Astro bookshop live renders through an assign

platforms:
  - linux
  - mac

steps:
  - ref: ./background.toolproof.yml
  - step: I have a "site/src/components/assigner/assigner.astro" file with the content {astro}
    astro: |-
      ---
      const testVar = Astro.props.component._bookshop_name;
      const titleVar = Astro.props.component.title;

      const components = import.meta.glob('../**/*.*', { eager: true });
      const Component = components[`../${testVar}/${testVar}.astro`].default
      const ReactComponent = components[`../${testVar}/${testVar}_react.jsx`].default
      ---
      <div> <Component bookshop:live title={titleVar} /></div>
      <div> <ReactComponent bookshop:live title={titleVar} /></div>
  - step: I have a "site/src/components/assigner/assigner_react.jsx" file with the content {jsx}
    jsx: |-
      const components = import.meta.glob('../**/*.*', { eager: true });

      export default ({component}) => {
        const testVar = component._bookshop_name;
        const titleVar = component.title;
        const ReactComponent = components[`../${testVar}/${testVar}_react.jsx`].default
        return <div> <ReactComponent title={titleVar} /></div>
      }
  - step: I have a "site/src/layouts/Page.astro" file with the content {astro}
    astro: |-
      ---
      import Assigner from "../components/assigner/assigner.astro";
      import AssignerReact from "../components/assigner/assigner_react.jsx";
      const { frontmatter } = Astro.props;
      ---
      <html lang="en"> <body>
      <Assigner component={frontmatter.component} />
      <AssignerReact bookshop:live component={frontmatter.component} />
      </body> </html>
  - step: I have a "site/src/pages/index.md" file with the content {md}
    md: |-
      ---
      layout: ../layouts/Page.astro
      component:
        _bookshop_name: single
        title: My title
      ---
  - macro: I build my Astro site and load it with front matter {json}
    json: |-
      {
        "layout": "../layouts/Page.astro",
        "component": {
          "_bookshop_name": "single",
          "title": "My title"
        }
      }
  - macro: CloudCannon pushes the front matter {json}
    json: |-
      {
        "layout": "../layouts/Page.astro",
        "component": {
          "_bookshop_name": "single",
          "title": "Live Love Laugh"
        }
      }
  - step: In my browser, the console should be empty
  - step: In my browser, the result of {js} should contain "Live Love Laugh"
    js: return (await toolproof.querySelector("div:nth-of-type(1)>h1")).textContent
  - step: In my browser, the result of {js} should contain "Live Love Laugh"
    js: return (await toolproof.querySelector("div:nth-of-type(2)>h1")).textContent
  - step: In my browser, the result of {js} should contain "Live Love Laugh"
    js: return (await toolproof.querySelector("div:nth-of-type(3)>h1")).textContent
