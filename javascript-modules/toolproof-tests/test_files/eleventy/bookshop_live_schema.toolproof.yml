name: Eleventy Bookshop Live schema comments

steps:
  - macro: I setup an Eleventy site
  - step: I have a "site/.eleventy.js" file with the content {js}
    js: |-
      const pluginBookshop = require("@bookshop/eleventy-bookshop");

      module.exports = function (eleventyConfig) {
        eleventyConfig.addPlugin(pluginBookshop({
          bookshopLocations: ["../component-lib"],
          pathPrefix: "/documentation/"
        }));

        return {
          pathPrefix: "/documentation/"
        }
      };
  - step: I have a "component-lib/components/page/page.eleventy.liquid" file with the content {liquid}
    liquid: |-
      {% for block in content_blocks %}
      {% assign b = block %}
      <p>{{ b._bookshop_name }}</p>
      {% bookshop "single" _bookshop_name: "inner" %}
      {% endfor %}
  - step: I have a "component-lib/components/single/single.eleventy.liquid" file with the content {liquid}
    liquid: |-
      <span>{{ _bookshop_name }}</span>
  - step: I have a "site/index.html" file with the content {html}
    html: |-
      ---
      content_blocks:
        - _bookshop_name: fake
      ---
      {% bookshop "page" content_blocks: content_blocks %}
      {% for block in content_blocks %}
      {% bookshop "single" bind: block %}
      {% endfor %}
  - step: I run "cd site && npm start"
  - step: stderr should be empty
  - step: stdout should not be empty
  - step: The file "site/_site/index.html" should contain {html}
    html: |-
      pathPrefix: "/documentation/") -->
      <!--bookshop-live name(page) params(content_blocks: content_blocks) context() -->

      <p>fake</p>
      <!--bookshop-live name(single) params(_bookshop_name: "inner") context(block: content_blocks[0]) --><span>inner</span><!--bookshop-live end-->
      <!--bookshop-live end-->
  - step: The file "site/_site/index.html" should contain {html}
    html: |-
      pathPrefix: "/documentation/") -->
      <!--bookshop-live name(single) params(bind: block) context(block: content_blocks[0]) --><span>fake</span><!--bookshop-live end-->
